"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"d5d5c473e7ca\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3N0eWxlcy9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL1JFQUNUL0dpdC1EaWdpdG1hbi9zdHlsZXMvZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJkNWQ1YzQ3M2U3Y2FcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./styles/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/DynamicChart.jsx":
/*!******************************!*\
  !*** ./app/DynamicChart.jsx ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var echarts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! echarts */ \"(app-pages-browser)/./node_modules/echarts/index.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst DynamicChart = ()=>{\n    _s();\n    const [temperatureData, setTemperatureData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // 存储温度数据\n    const [utilizationData, setUtilizationData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // 存储GPU利用率数据\n    const [categories, setCategories] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // 存储时间轴数据\n    const [isVisible, setIsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // 控制窗口是否可见\n    const [isMinimized, setIsMinimized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // 控制窗口是否最小化\n    const temperatureChartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // 温度图表容器\n    const utilizationChartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // GPU利用率图表容器\n    const temperatureChart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // 存储温度图表实例\n    const utilizationChart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // 存储GPU利用率图表实例\n    const toggleVisibility = ()=>setIsVisible(!isVisible);\n    const toggleMinimize = ()=>{\n        setIsMinimized(false); // 取消最小化，恢复窗口\n        setTimeout(initializeCharts); // 延迟 1 秒后重新初始化图表\n    };\n    // 新增重新初始化图表函数\n    const initializeCharts = ()=>{\n        if (!temperatureChartRef.current || !utilizationChartRef.current) return;\n        // 销毁旧的图表实例\n        if (temperatureChart.current) temperatureChart.current.dispose();\n        if (utilizationChart.current) utilizationChart.current.dispose();\n        // 重新初始化ECharts实例\n        temperatureChart.current = echarts__WEBPACK_IMPORTED_MODULE_2__.init(temperatureChartRef.current);\n        utilizationChart.current = echarts__WEBPACK_IMPORTED_MODULE_2__.init(utilizationChartRef.current);\n        // 初始化温度图表\n        const temperatureOption = {\n            title: {\n                text: 'GPU工作温度监控'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'cross',\n                    label: {\n                        backgroundColor: '#283b56'\n                    }\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: true,\n                data: categories\n            },\n            yAxis: {\n                type: 'value',\n                scale: true,\n                name: '实时温度 (°C)',\n                max: 70,\n                min: 60,\n                boundaryGap: [\n                    0.2,\n                    0.2\n                ]\n            },\n            series: [\n                {\n                    name: '工作温度',\n                    type: 'line',\n                    data: temperatureData,\n                    color: '#FF6347' // 设置线条颜色为番茄红\n                }\n            ]\n        };\n        // 初始化GPU利用率图表\n        const utilizationOption = {\n            title: {\n                text: 'GPU显存监控'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'cross',\n                    label: {\n                        backgroundColor: '#283b56'\n                    }\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: true,\n                data: categories\n            },\n            yAxis: {\n                type: 'value',\n                scale: true,\n                name: 'GPU显存使用',\n                max: 24564,\n                min: 6000,\n                boundaryGap: [\n                    0.2,\n                    0.2\n                ]\n            },\n            series: [\n                {\n                    name: 'GPU利用率',\n                    type: 'line',\n                    data: utilizationData\n                }\n            ]\n        };\n        temperatureChart.current.setOption(temperatureOption);\n        utilizationChart.current.setOption(utilizationOption);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicChart.useEffect\": ()=>{\n            // 如果小窗最小化了，不初始化echarts图表\n            if (isMinimized || !temperatureChartRef.current || !utilizationChartRef.current) return;\n            // 只在组件第一次加载时初始化ECharts实例\n            if (!temperatureChart.current) {\n                temperatureChart.current = echarts__WEBPACK_IMPORTED_MODULE_2__.init(temperatureChartRef.current);\n            }\n            if (!utilizationChart.current) {\n                utilizationChart.current = echarts__WEBPACK_IMPORTED_MODULE_2__.init(utilizationChartRef.current);\n            }\n            // 初始化温度图表\n            const temperatureOption = {\n                title: {\n                    text: 'GPU工作温度监控'\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#283b56'\n                        }\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: true,\n                    data: categories\n                },\n                yAxis: {\n                    type: 'value',\n                    scale: true,\n                    name: '实时温度 (°C)',\n                    max: 70,\n                    min: 60,\n                    boundaryGap: [\n                        0.2,\n                        0.2\n                    ]\n                },\n                series: [\n                    {\n                        name: '工作温度',\n                        type: 'line',\n                        data: temperatureData,\n                        color: '#FF6347' // 设置线条颜色为番茄红\n                    }\n                ]\n            };\n            // 初始化GPU利用率图表\n            const utilizationOption = {\n                title: {\n                    text: 'GPU显存监控'\n                },\n                tooltip: {\n                    trigger: 'axis',\n                    axisPointer: {\n                        type: 'cross',\n                        label: {\n                            backgroundColor: '#283b56'\n                        }\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    boundaryGap: true,\n                    data: categories\n                },\n                yAxis: {\n                    type: 'value',\n                    scale: true,\n                    name: 'GPU显存使用',\n                    max: 24564,\n                    min: 6000,\n                    boundaryGap: [\n                        0.2,\n                        0.2\n                    ]\n                },\n                series: [\n                    {\n                        name: 'GPU利用率',\n                        type: 'line',\n                        data: utilizationData\n                    }\n                ]\n            };\n            temperatureChart.current.setOption(temperatureOption);\n            utilizationChart.current.setOption(utilizationOption);\n            // 定义获取GPU数据的函数\n            const fetchGPUStatsData = {\n                \"DynamicChart.useEffect.fetchGPUStatsData\": async ()=>{\n                    try {\n                        const response = await fetch(\"http://119.255.238.247:8000/api/gpu-stats\"); // 你的API地址\n                        const data = await response.json();\n                        if (data.error) {\n                            console.error(\"Error fetching GPU data:\", data.error);\n                        } else {\n                            const { temperature, memory_used } = data;\n                            // 更新 categories（时间轴）\n                            const newTime = new Date().toLocaleTimeString().replace(/^\\D*/, '');\n                            setCategories({\n                                \"DynamicChart.useEffect.fetchGPUStatsData\": (prevCategories)=>{\n                                    const newCategories = [\n                                        ...prevCategories,\n                                        newTime\n                                    ];\n                                    return newCategories.slice(-10); // 保持最近10个时间点\n                                }\n                            }[\"DynamicChart.useEffect.fetchGPUStatsData\"]);\n                            // 更新温度数据\n                            setTemperatureData({\n                                \"DynamicChart.useEffect.fetchGPUStatsData\": (prev)=>{\n                                    const newData = [\n                                        ...prev,\n                                        temperature\n                                    ];\n                                    return newData.slice(-10); // 保持最近10个数据点\n                                }\n                            }[\"DynamicChart.useEffect.fetchGPUStatsData\"]);\n                            // 更新GPU利用率数据\n                            setUtilizationData({\n                                \"DynamicChart.useEffect.fetchGPUStatsData\": (prev)=>{\n                                    const newData = [\n                                        ...prev,\n                                        memory_used\n                                    ];\n                                    return newData.slice(-10); // 保持最近10个数据点\n                                }\n                            }[\"DynamicChart.useEffect.fetchGPUStatsData\"]);\n                        }\n                    } catch (error) {\n                        console.error(\"Failed to fetch GPU stats:\", error);\n                    }\n                }\n            }[\"DynamicChart.useEffect.fetchGPUStatsData\"];\n            // 每隔2.1秒请求一次GPU数据\n            const intervalId = setInterval(fetchGPUStatsData, 2100);\n            // Clean up interval on component unmount\n            return ({\n                \"DynamicChart.useEffect\": ()=>{\n                    clearInterval(intervalId);\n                    // 销毁 ECharts 实例，防止内存泄漏\n                    temperatureChart.current.dispose();\n                    utilizationChart.current.dispose();\n                }\n            })[\"DynamicChart.useEffect\"];\n        }\n    }[\"DynamicChart.useEffect\"], [\n        isMinimized\n    ]); // 只在第一次加载时初始化 ECharts 实例\n    // 更新图表数据\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicChart.useEffect\": ()=>{\n            if (isMinimized || !temperatureChart.current || !utilizationChart.current) return;\n            // 只更新数据，不重绘整个图表\n            if (temperatureData.length) {\n                temperatureChart.current.setOption({\n                    series: [\n                        {\n                            data: temperatureData\n                        }\n                    ]\n                });\n            }\n            if (utilizationData.length) {\n                utilizationChart.current.setOption({\n                    series: [\n                        {\n                            data: utilizationData\n                        }\n                    ]\n                });\n            }\n            // 更新时间轴\n            temperatureChart.current.setOption({\n                xAxis: {\n                    data: categories\n                }\n            });\n            utilizationChart.current.setOption({\n                xAxis: {\n                    data: categories\n                }\n            });\n        }\n    }[\"DynamicChart.useEffect\"], [\n        temperatureData,\n        utilizationData,\n        categories\n    ]); // 当 temperatureData, utilizationData 或 categories 更新时更新图表\n    const handleMinimize = ()=>{\n        setIsMinimized(true);\n    // 在最小化后延迟一秒执行初始化图表逻辑\n    // setTimeout(initializeCharts, 1000);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: isVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                position: 'fixed',\n                bottom: isMinimized ? '20px' : '20px',\n                right: '20px',\n                width: isMinimized ? '50px' : '500px',\n                height: isMinimized ? '50px' : '600px',\n                backgroundColor: 'white',\n                border: '1px solid #ccc',\n                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n                borderRadius: '8px',\n                zIndex: 1000,\n                display: 'flex',\n                flexDirection: 'column'\n            },\n            children: !isMinimized ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: '4px',\n                            display: 'flex',\n                            justifyContent: 'flex-end'\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleMinimize,\n                                style: {\n                                    marginRight: '10px',\n                                    padding: '1px 12px',\n                                    backgroundColor: '#f0f0f0',\n                                    border: '1px solid #ccc',\n                                    borderRadius: '5px',\n                                    fontSize: '20px',\n                                    cursor: 'pointer',\n                                    transition: 'background-color 0.3s'\n                                },\n                                onMouseEnter: (e)=>e.target.style.backgroundColor = '#e0e0e0',\n                                onMouseLeave: (e)=>e.target.style.backgroundColor = '#f0f0f0',\n                                children: \"-\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                                lineNumber: 316,\n                                columnNumber: 17\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: toggleVisibility,\n                                style: {\n                                    padding: '1px 12px',\n                                    backgroundColor: '#ff4d4f',\n                                    border: '1px solid #cc0000',\n                                    borderRadius: '5px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer',\n                                    color: 'white',\n                                    transition: 'background-color 0.3s'\n                                },\n                                onMouseEnter: (e)=>e.target.style.backgroundColor = '#e60000',\n                                onMouseLeave: (e)=>e.target.style.backgroundColor = '#ff4d4f',\n                                children: \"x\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                                lineNumber: 335,\n                                columnNumber: 17\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                        lineNumber: 308,\n                        columnNumber: 15\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: temperatureChartRef,\n                        style: {\n                            width: '100%',\n                            height: '45%'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                        lineNumber: 355,\n                        columnNumber: 15\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: utilizationChartRef,\n                        style: {\n                            width: '100%',\n                            height: '45%'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                        lineNumber: 358,\n                        columnNumber: 15\n                    }, undefined)\n                ]\n            }, void 0, true) : // 最小化后的小图标按钮\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: toggleMinimize,\n                style: {\n                    position: 'absolute',\n                    bottom: '10px',\n                    right: '10px'\n                },\n                children: \"还原\"\n            }, void 0, false, {\n                fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                lineNumber: 362,\n                columnNumber: 13\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n            lineNumber: 289,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n        lineNumber: 286,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DynamicChart, \"pEQFi/BT5mkoFRnWIzGM19fbI4k=\");\n_c = DynamicChart;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DynamicChart);\nvar _c;\n$RefreshReg$(_c, \"DynamicChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/DynamicChart.jsx\n"));

/***/ })

});