"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"490af3285afe\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3N0eWxlcy9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL1JFQUNUL0dpdC1EaWdpdG1hbi9zdHlsZXMvZ2xvYmFscy5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI0OTBhZjMyODVhZmVcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./styles/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/DynamicChart.jsx":
/*!******************************!*\
  !*** ./app/DynamicChart.jsx ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var echarts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! echarts */ \"(app-pages-browser)/./node_modules/echarts/index.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst DynamicChart = ()=>{\n    _s();\n    const categories = function() {\n        let now = new Date();\n        let res = [];\n        let len = 10;\n        while(len--){\n            res.unshift(now.toLocaleTimeString().replace(/^\\D*/, ''));\n            now = new Date(+now - 2000);\n        }\n        return res;\n    }();\n    const categories2 = function() {\n        let res = [];\n        let len = 10;\n        while(len--){\n            res.push(10 - len - 1);\n        }\n        return res;\n    }();\n    const [temperatureData, setTemperatureData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // 存储温度数据\n    const [utilizationData, setUtilizationData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // 存储GPU利用率数据\n    const [isVisible, setIsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // 控制窗口是否可见\n    const [isMinimized, setIsMinimized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // 控制窗口是否最小化\n    const chartRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // 使用 useRef 来获取 chart-container\n    const myChart = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // 保存 ECharts 实例\n    const toggleVisibility = ()=>setIsVisible(!isVisible);\n    const toggleMinimize = ()=>setIsMinimized(!isMinimized);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicChart.useEffect\": ()=>{\n            // 如果小窗最小化了，不初始化echarts图表\n            if (isMinimized || !chartRef.current) return;\n            // 仅在第一次渲染时初始化图表\n            if (!myChart.current) {\n                myChart.current = echarts__WEBPACK_IMPORTED_MODULE_2__.init(chartRef.current);\n                const option = {\n                    title: {\n                        text: 'GPU状态监控'\n                    },\n                    tooltip: {\n                        trigger: 'axis',\n                        axisPointer: {\n                            type: 'cross',\n                            label: {\n                                backgroundColor: '#283b56'\n                            }\n                        }\n                    },\n                    legend: {},\n                    toolbox: {\n                        show: true,\n                        feature: {\n                            dataView: {\n                                readOnly: false\n                            },\n                            restore: {},\n                            saveAsImage: {}\n                        }\n                    },\n                    dataZoom: {\n                        show: false,\n                        start: 0,\n                        end: 100\n                    },\n                    xAxis: [\n                        {\n                            type: 'category',\n                            boundaryGap: true,\n                            data: categories\n                        },\n                        {\n                            type: 'category',\n                            boundaryGap: true,\n                            data: categories2\n                        }\n                    ],\n                    yAxis: [\n                        {\n                            type: 'value',\n                            scale: true,\n                            name: '实时温度 (°C)',\n                            max: 100,\n                            min: 0,\n                            boundaryGap: [\n                                0.2,\n                                0.2\n                            ]\n                        },\n                        {\n                            type: 'value',\n                            scale: true,\n                            name: 'GPU利用率 (%)',\n                            max: 100,\n                            min: 0,\n                            boundaryGap: [\n                                0.2,\n                                0.2\n                            ]\n                        }\n                    ],\n                    series: [\n                        {\n                            name: '工作温度',\n                            type: 'line',\n                            data: temperatureData\n                        },\n                        {\n                            name: 'GPU利用率',\n                            type: 'line',\n                            data: utilizationData\n                        }\n                    ]\n                };\n                // Set the initial option\n                myChart.current.setOption(option);\n            }\n            // 定义获取GPU数据的函数\n            const fetchGPUStatsData = {\n                \"DynamicChart.useEffect.fetchGPUStatsData\": async ()=>{\n                    try {\n                        const response = await fetch(\"http://119.255.238.247:8000/api/gpu-stats\"); // 你的API地址\n                        const data = await response.json();\n                        if (data.error) {\n                            console.error(\"Error fetching GPU data:\", data.error);\n                        } else {\n                            const { temperature, utilization } = data;\n                            // 更新温度和利用率数据\n                            setTemperatureData({\n                                \"DynamicChart.useEffect.fetchGPUStatsData\": (prev)=>{\n                                    const newData = [\n                                        ...prev,\n                                        temperature\n                                    ];\n                                    return newData.slice(-10); // 保持最近10个数据点\n                                }\n                            }[\"DynamicChart.useEffect.fetchGPUStatsData\"]);\n                            setUtilizationData({\n                                \"DynamicChart.useEffect.fetchGPUStatsData\": (prev)=>{\n                                    const newData = [\n                                        ...prev,\n                                        utilization\n                                    ];\n                                    return newData.slice(-10); // 保持最近10个数据点\n                                }\n                            }[\"DynamicChart.useEffect.fetchGPUStatsData\"]);\n                        }\n                    } catch (error) {\n                        console.error(\"Failed to fetch GPU stats:\", error);\n                    }\n                }\n            }[\"DynamicChart.useEffect.fetchGPUStatsData\"];\n            // 每隔2.1秒请求一次GPU数据\n            const intervalId = setInterval(fetchGPUStatsData, 2100);\n            // Clean up interval on component unmount\n            return ({\n                \"DynamicChart.useEffect\": ()=>{\n                    clearInterval(intervalId);\n                    if (myChart.current) {\n                        myChart.current.dispose(); // 销毁 ECharts 实例，防止内存泄漏\n                    }\n                }\n            })[\"DynamicChart.useEffect\"];\n        }\n    }[\"DynamicChart.useEffect\"], [\n        isMinimized\n    ]); // 只依赖 isMinimized，避免重复渲染\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DynamicChart.useEffect\": ()=>{\n            // 确保只有在图表已经初始化后才更新数据\n            if (!myChart.current || isMinimized) return;\n            // 仅在数据变化时更新数据\n            myChart.current.setOption({\n                xAxis: [\n                    {\n                        data: categories\n                    },\n                    {\n                        data: categories2\n                    }\n                ],\n                series: [\n                    {\n                        data: temperatureData\n                    },\n                    {\n                        data: utilizationData\n                    }\n                ]\n            }, true); // 使用 `true` 来仅更新数据，不刷新图表\n        }\n    }[\"DynamicChart.useEffect\"], [\n        temperatureData,\n        utilizationData,\n        isMinimized\n    ]); // 监听温度和利用率数据\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: isVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                position: 'fixed',\n                bottom: isMinimized ? '20px' : '20px',\n                right: '20px',\n                width: isMinimized ? '50px' : '500px',\n                height: isMinimized ? '50px' : '400px',\n                backgroundColor: 'white',\n                border: '1px solid #ccc',\n                boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n                borderRadius: '8px',\n                zIndex: 1000\n            },\n            children: !isMinimized ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        style: {\n                            padding: '4px',\n                            display: 'flex',\n                            justifyContent: 'flex-end'\n                        },\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: toggleMinimize,\n                                style: {\n                                    marginRight: '10px',\n                                    padding: '1px 12px',\n                                    backgroundColor: '#f0f0f0',\n                                    border: '1px solid #ccc',\n                                    borderRadius: '5px',\n                                    fontSize: '20px',\n                                    cursor: 'pointer',\n                                    transition: 'background-color 0.3s'\n                                },\n                                onMouseEnter: (e)=>e.target.style.backgroundColor = '#e0e0e0',\n                                onMouseLeave: (e)=>e.target.style.backgroundColor = '#f0f0f0',\n                                children: \"-\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                                lineNumber: 211,\n                                columnNumber: 17\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: toggleVisibility,\n                                style: {\n                                    padding: '1px 12px',\n                                    backgroundColor: '#ff4d4f',\n                                    border: '1px solid #cc0000',\n                                    borderRadius: '5px',\n                                    fontSize: '16px',\n                                    cursor: 'pointer',\n                                    color: 'white',\n                                    transition: 'background-color 0.3s'\n                                },\n                                onMouseEnter: (e)=>e.target.style.backgroundColor = '#e60000',\n                                onMouseLeave: (e)=>e.target.style.backgroundColor = '#ff4d4f',\n                                children: \"x\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                                lineNumber: 230,\n                                columnNumber: 17\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                        lineNumber: 203,\n                        columnNumber: 15\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: chartRef,\n                        style: {\n                            width: '100%',\n                            height: '95%'\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                        lineNumber: 250,\n                        columnNumber: 15\n                    }, undefined)\n                ]\n            }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: toggleMinimize,\n                style: {\n                    position: 'absolute',\n                    bottom: '10px',\n                    right: '10px'\n                },\n                children: \"+\"\n            }, void 0, false, {\n                fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n                lineNumber: 253,\n                columnNumber: 13\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n            lineNumber: 186,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/mac/Documents/REACT/Git-Digitman/app/DynamicChart.jsx\",\n        lineNumber: 183,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DynamicChart, \"lg0lIluEcfLW3a43K9d/pN2zahM=\");\n_c = DynamicChart;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DynamicChart);\nvar _c;\n$RefreshReg$(_c, \"DynamicChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9EeW5hbWljQ2hhcnQuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkQ7QUFDeEI7QUFFbkMsTUFBTUssZUFBZTs7SUFDbkIsTUFBTUMsYUFBYTtRQUNqQixJQUFJQyxNQUFNLElBQUlDO1FBQ2QsSUFBSUMsTUFBTSxFQUFFO1FBQ1osSUFBSUMsTUFBTTtRQUNWLE1BQU9BLE1BQU87WUFDWkQsSUFBSUUsT0FBTyxDQUFDSixJQUFJSyxrQkFBa0IsR0FBR0MsT0FBTyxDQUFDLFFBQVE7WUFDckROLE1BQU0sSUFBSUMsS0FBSyxDQUFDRCxNQUFNO1FBQ3hCO1FBQ0EsT0FBT0U7SUFDVDtJQUVBLE1BQU1LLGNBQWM7UUFDbEIsSUFBSUwsTUFBTSxFQUFFO1FBQ1osSUFBSUMsTUFBTTtRQUNWLE1BQU9BLE1BQU87WUFDWkQsSUFBSU0sSUFBSSxDQUFDLEtBQUtMLE1BQU07UUFDdEI7UUFDQSxPQUFPRDtJQUNUO0lBRUEsTUFBTSxDQUFDTyxpQkFBaUJDLG1CQUFtQixHQUFHaEIsK0NBQVFBLENBQUMsRUFBRSxHQUFHLFNBQVM7SUFDckUsTUFBTSxDQUFDaUIsaUJBQWlCQyxtQkFBbUIsR0FBR2xCLCtDQUFRQSxDQUFDLEVBQUUsR0FBRyxhQUFhO0lBQ3pFLE1BQU0sQ0FBQ21CLFdBQVdDLGFBQWEsR0FBR3BCLCtDQUFRQSxDQUFDLE9BQU8sV0FBVztJQUM3RCxNQUFNLENBQUNxQixhQUFhQyxlQUFlLEdBQUd0QiwrQ0FBUUEsQ0FBQyxRQUFRLFlBQVk7SUFDbkUsTUFBTXVCLFdBQVdyQiw2Q0FBTUEsQ0FBQyxPQUFPLGdDQUFnQztJQUMvRCxNQUFNc0IsVUFBVXRCLDZDQUFNQSxDQUFDLE9BQU8sZ0JBQWdCO0lBRTlDLE1BQU11QixtQkFBbUIsSUFBTUwsYUFBYSxDQUFDRDtJQUM3QyxNQUFNTyxpQkFBaUIsSUFBTUosZUFBZSxDQUFDRDtJQUU3Q3BCLGdEQUFTQTtrQ0FBQztZQUNSLHlCQUF5QjtZQUN6QixJQUFJ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QVNoRTtnQ0FDVGtELE9BQU87b0NBQ0xVLFNBQVM7b0NBQ1RoRCxpQkFBaUI7b0NBQ2pCNEMsUUFBUTtvQ0FDUkUsY0FBYztvQ0FDZFEsVUFBVTtvQ0FDVkMsUUFBUTtvQ0FDUk0sT0FBTztvQ0FDUEwsWUFBWTtnQ0FDZDtnQ0FDQUMsY0FBYyxDQUFDQyxJQUFPQSxFQUFFQyxNQUFNLENBQUNyQixLQUFLLENBQUN0QyxlQUFlLEdBQUc7Z0NBQ3ZENEQsY0FBYyxDQUFDRixJQUFPQSxFQUFFQyxNQUFNLENBQUNyQixLQUFLLENBQUN0QyxlQUFlLEdBQUc7MENBQ3hEOzs7Ozs7Ozs7Ozs7a0NBTUgsOERBQUNxQzt3QkFBSXlCLEtBQUs1RTt3QkFBVW9ELE9BQU87NEJBQUVJLE9BQU87NEJBQVFDLFFBQVE7d0JBQU07Ozs7Ozs7NkNBRzVELDhEQUFDUTtnQkFBT0MsU0FBUy9EO2dCQUFnQmlELE9BQU87b0JBQUVDLFVBQVU7b0JBQVlDLFFBQVE7b0JBQVFDLE9BQU87Z0JBQU87MEJBQUc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNN0c7R0EvUE0xRTtLQUFBQTtBQWlRTixpRUFBZUEsWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9Eb2N1bWVudHMvUkVBQ1QvR2l0LURpZ2l0bWFuL2FwcC9EeW5hbWljQ2hhcnQuanN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBlY2hhcnRzIGZyb20gJ2VjaGFydHMnO1xuXG5jb25zdCBEeW5hbWljQ2hhcnQgPSAoKSA9PiB7XG4gIGNvbnN0IGNhdGVnb3JpZXMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGxldCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgIGxldCByZXMgPSBbXTtcbiAgICBsZXQgbGVuID0gMTA7XG4gICAgd2hpbGUgKGxlbi0tKSB7XG4gICAgICByZXMudW5zaGlmdChub3cudG9Mb2NhbGVUaW1lU3RyaW5nKCkucmVwbGFjZSgvXlxcRCovLCAnJykpO1xuICAgICAgbm93ID0gbmV3IERhdGUoK25vdyAtIDIwMDApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xuICB9KSgpO1xuXG4gIGNvbnN0IGNhdGVnb3JpZXMyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgcmVzID0gW107XG4gICAgbGV0IGxlbiA9IDEwO1xuICAgIHdoaWxlIChsZW4tLSkge1xuICAgICAgcmVzLnB1c2goMTAgLSBsZW4gLSAxKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbiAgfSkoKTtcblxuICBjb25zdCBbdGVtcGVyYXR1cmVEYXRhLCBzZXRUZW1wZXJhdHVyZURhdGFdID0gdXNlU3RhdGUoW10pOyAvLyDlrZjlgqjmuKnluqbmlbDmja5cbiAgY29uc3QgW3V0aWxpemF0aW9uRGF0YSwgc2V0VXRpbGl6YXRpb25EYXRhXSA9IHVzZVN0YXRlKFtdKTsgLy8g5a2Y5YKoR1BV5Yip55So546H5pWw5o2uXG4gIGNvbnN0IFtpc1Zpc2libGUsIHNldElzVmlzaWJsZV0gPSB1c2VTdGF0ZSh0cnVlKTsgLy8g5o6n5Yi256qX5Y+j5piv5ZCm5Y+v6KeBXG4gIGNvbnN0IFtpc01pbmltaXplZCwgc2V0SXNNaW5pbWl6ZWRdID0gdXNlU3RhdGUoZmFsc2UpOyAvLyDmjqfliLbnqpflj6PmmK/lkKbmnIDlsI/ljJZcbiAgY29uc3QgY2hhcnRSZWYgPSB1c2VSZWYobnVsbCk7IC8vIOS9v+eUqCB1c2VSZWYg5p2l6I635Y+WIGNoYXJ0LWNvbnRhaW5lclxuICBjb25zdCBteUNoYXJ0ID0gdXNlUmVmKG51bGwpOyAvLyDkv53lrZggRUNoYXJ0cyDlrp7kvotcblxuICBjb25zdCB0b2dnbGVWaXNpYmlsaXR5ID0gKCkgPT4gc2V0SXNWaXNpYmxlKCFpc1Zpc2libGUpO1xuICBjb25zdCB0b2dnbGVNaW5pbWl6ZSA9ICgpID0+IHNldElzTWluaW1pemVkKCFpc01pbmltaXplZCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyDlpoLmnpzlsI/nqpfmnIDlsI/ljJbkuobvvIzkuI3liJ3lp4vljJZlY2hhcnRz5Zu+6KGoXG4gICAgaWYgKGlzTWluaW1pemVkIHx8ICFjaGFydFJlZi5jdXJyZW50KSByZXR1cm47XG5cbiAgICAvLyDku4XlnKjnrKzkuIDmrKHmuLLmn5Pml7bliJ3lp4vljJblm77ooahcbiAgICBpZiAoIW15Q2hhcnQuY3VycmVudCkge1xuICAgICAgbXlDaGFydC5jdXJyZW50ID0gZWNoYXJ0cy5pbml0KGNoYXJ0UmVmLmN1cnJlbnQpO1xuXG4gICAgICBjb25zdCBvcHRpb24gPSB7XG4gICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgdGV4dDogJ0dQVeeKtuaAgeebkeaOpydcbiAgICAgICAgfSxcbiAgICAgICAgdG9vbHRpcDoge1xuICAgICAgICAgIHRyaWdnZXI6ICdheGlzJyxcbiAgICAgICAgICBheGlzUG9pbnRlcjoge1xuICAgICAgICAgICAgdHlwZTogJ2Nyb3NzJyxcbiAgICAgICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMyODNiNTYnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBsZWdlbmQ6IHt9LFxuICAgICAgICB0b29sYm94OiB7XG4gICAgICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgICAgICBmZWF0dXJlOiB7XG4gICAgICAgICAgICBkYXRhVmlldzogeyByZWFkT25seTogZmFsc2UgfSxcbiAgICAgICAgICAgIHJlc3RvcmU6IHt9LFxuICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHt9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBkYXRhWm9vbToge1xuICAgICAgICAgIHNob3c6IGZhbHNlLFxuICAgICAgICAgIHN0YXJ0OiAwLFxuICAgICAgICAgIGVuZDogMTAwXG4gICAgICAgIH0sXG4gICAgICAgIHhBeGlzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JyxcbiAgICAgICAgICAgIGJvdW5kYXJ5R2FwOiB0cnVlLFxuICAgICAgICAgICAgZGF0YTogY2F0ZWdvcmllc1xuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JyxcbiAgICAgICAgICAgIGJvdW5kYXJ5R2FwOiB0cnVlLFxuICAgICAgICAgICAgZGF0YTogY2F0ZWdvcmllczJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIHlBeGlzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdHlwZTogJ3ZhbHVlJyxcbiAgICAgICAgICAgIHNjYWxlOiB0cnVlLFxuICAgICAgICAgICAgbmFtZTogJ+WunuaXtua4qeW6piAowrBDKScsXG4gICAgICAgICAgICBtYXg6IDEwMCxcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgIGJvdW5kYXJ5R2FwOiBbMC4yLCAwLjJdXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0eXBlOiAndmFsdWUnLFxuICAgICAgICAgICAgc2NhbGU6IHRydWUsXG4gICAgICAgICAgICBuYW1lOiAnR1BV5Yip55So546HICglKScsXG4gICAgICAgICAgICBtYXg6IDEwMCxcbiAgICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICAgIGJvdW5kYXJ5R2FwOiBbMC4yLCAwLjJdXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBzZXJpZXM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiAn5bel5L2c5rip5bqmJyxcbiAgICAgICAgICAgIHR5cGU6ICdsaW5lJyxcbiAgICAgICAgICAgIGRhdGE6IHRlbXBlcmF0dXJlRGF0YVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ0dQVeWIqeeUqOeOhycsXG4gICAgICAgICAgICB0eXBlOiAnbGluZScsXG4gICAgICAgICAgICBkYXRhOiB1dGlsaXphdGlvbkRhdGFcbiAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICAgIH07XG5cbiAgICAgIC8vIFNldCB0aGUgaW5pdGlhbCBvcHRpb25cbiAgICAgIG15Q2hhcnQuY3VycmVudC5zZXRPcHRpb24ob3B0aW9uKTtcbiAgICB9XG5cbiAgICAvLyDlrprkuYnojrflj5ZHUFXmlbDmja7nmoTlh73mlbBcbiAgICBjb25zdCBmZXRjaEdQVVN0YXRzRGF0YSA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCJodHRwOi8vMTE5LjI1NS4yMzguMjQ3OjgwMDAvYXBpL2dwdS1zdGF0c1wiKTsgLy8g5L2g55qEQVBJ5Zyw5Z2AXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgICAgaWYgKGRhdGEuZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgR1BVIGRhdGE6XCIsIGRhdGEuZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnN0IHsgdGVtcGVyYXR1cmUsIHV0aWxpemF0aW9uIH0gPSBkYXRhO1xuXG4gICAgICAgICAgLy8g5pu05paw5rip5bqm5ZKM5Yip55So546H5pWw5o2uXG4gICAgICAgICAgc2V0VGVtcGVyYXR1cmVEYXRhKHByZXYgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV3RGF0YSA9IFsuLi5wcmV2LCB0ZW1wZXJhdHVyZV07XG4gICAgICAgICAgICByZXR1cm4gbmV3RGF0YS5zbGljZSgtMTApOyAvLyDkv53mjIHmnIDov5ExMOS4quaVsOaNrueCuVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHNldFV0aWxpemF0aW9uRGF0YShwcmV2ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld0RhdGEgPSBbLi4ucHJldiwgdXRpbGl6YXRpb25dO1xuICAgICAgICAgICAgcmV0dXJuIG5ld0RhdGEuc2xpY2UoLTEwKTsgLy8g5L+d5oyB5pyA6L+RMTDkuKrmlbDmja7ngrlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBmZXRjaCBHUFUgc3RhdHM6XCIsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8g5q+P6ZqUMi4x56eS6K+35rGC5LiA5qyhR1BV5pWw5o2uXG4gICAgY29uc3QgaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKGZldGNoR1BVU3RhdHNEYXRhLCAyMTAwKTtcblxuICAgIC8vIENsZWFuIHVwIGludGVydmFsIG9uIGNvbXBvbmVudCB1bm1vdW50XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7XG4gICAgICBpZiAobXlDaGFydC5jdXJyZW50KSB7XG4gICAgICAgIG15Q2hhcnQuY3VycmVudC5kaXNwb3NlKCk7IC8vIOmUgOavgSBFQ2hhcnRzIOWunuS+i++8jOmYsuatouWGheWtmOazhOa8j1xuICAgICAgfVxuICAgIH07XG4gIH0sIFtpc01pbmltaXplZF0pOyAvLyDlj6rkvp3otZYgaXNNaW5pbWl6ZWTvvIzpgb/lhY3ph43lpI3muLLmn5NcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIOehruS/neWPquacieWcqOWbvuihqOW3sue7j+WIneWni+WMluWQjuaJjeabtOaWsOaVsOaNrlxuICAgIGlmICghbXlDaGFydC5jdXJyZW50IHx8IGlzTWluaW1pemVkKSByZXR1cm47XG5cbiAgICAvLyDku4XlnKjmlbDmja7lj5jljJbml7bmm7TmlrDmlbDmja5cbiAgICBteUNoYXJ0LmN1cnJlbnQuc2V0T3B0aW9uKHtcbiAgICAgIHhBeGlzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBkYXRhOiBjYXRlZ29yaWVzXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBkYXRhOiBjYXRlZ29yaWVzMlxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgc2VyaWVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBkYXRhOiB0ZW1wZXJhdHVyZURhdGFcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGRhdGE6IHV0aWxpemF0aW9uRGF0YVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSwgdHJ1ZSk7IC8vIOS9v+eUqCBgdHJ1ZWAg5p2l5LuF5pu05paw5pWw5o2u77yM5LiN5Yi35paw5Zu+6KGoXG5cbiAgfSwgW3RlbXBlcmF0dXJlRGF0YSwgdXRpbGl6YXRpb25EYXRhLCBpc01pbmltaXplZF0pOyAvLyDnm5HlkKzmuKnluqblkozliKnnlKjnjofmlbDmja5cblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICB7Lyog5bCP56qX5oKs5rWu5qGGICovfVxuICAgICAge2lzVmlzaWJsZSAmJiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgICAgICAgICBib3R0b206IGlzTWluaW1pemVkID8gJzIwcHgnIDogJzIwcHgnLFxuICAgICAgICAgICAgcmlnaHQ6ICcyMHB4JyxcbiAgICAgICAgICAgIHdpZHRoOiBpc01pbmltaXplZCA/ICc1MHB4JyA6ICc1MDBweCcsXG4gICAgICAgICAgICBoZWlnaHQ6IGlzTWluaW1pemVkID8gJzUwcHgnIDogJzQwMHB4JyxcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgICAgICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCAjY2NjJyxcbiAgICAgICAgICAgIGJveFNoYWRvdzogJzAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSknLFxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnOHB4JyxcbiAgICAgICAgICAgIHpJbmRleDogMTAwMCxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgeyFpc01pbmltaXplZCA/IChcbiAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgIHsvKiDmjqfliLbmjInpkq7ljLogKi99XG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgcGFkZGluZzogJzRweCcsXG4gICAgICAgICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtZW5kJyxcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgey8qIOacgOWwj+WMluaMiemSriAqL31cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0b2dnbGVNaW5pbWl6ZX1cbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpblJpZ2h0OiAnMTBweCcsXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICcxcHggMTJweCcsXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmMGYwZjAnLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgI2NjYycsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzVweCcsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMjBweCcsXG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAnYmFja2dyb3VuZC1jb2xvciAwLjNzJyxcbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICBvbk1vdXNlRW50ZXI9eyhlKSA9PiAoZS50YXJnZXQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNlMGUwZTAnKX1cbiAgICAgICAgICAgICAgICAgIG9uTW91c2VMZWF2ZT17KGUpID0+IChlLnRhcmdldC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnI2YwZjBmMCcpfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIC1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cblxuICAgICAgICAgICAgICAgIHsvKiDlhbPpl63mjInpkq4gKi99XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgb25DbGljaz17dG9nZ2xlVmlzaWJpbGl0eX1cbiAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6ICcxcHggMTJweCcsXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmZjRkNGYnLFxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgI2NjMDAwMCcsXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogJzVweCcsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTZweCcsXG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3doaXRlJyxcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogJ2JhY2tncm91bmQtY29sb3IgMC4zcycsXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyPXsoZSkgPT4gKGUudGFyZ2V0LnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjZTYwMDAwJyl9XG4gICAgICAgICAgICAgICAgICBvbk1vdXNlTGVhdmU9eyhlKSA9PiAoZS50YXJnZXQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyNmZjRkNGYnKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB4XG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIHsvKiDlm77ooajlrrnlmaggKi99XG4gICAgICAgICAgICAgIDxkaXYgcmVmPXtjaGFydFJlZn0gc3R5bGU9e3sgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnOTUlJyB9fT48L2Rpdj5cbiAgICAgICAgICAgIDwvPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RvZ2dsZU1pbmltaXplfSBzdHlsZT17eyBwb3NpdGlvbjogJ2Fic29sdXRlJywgYm90dG9tOiAnMTBweCcsIHJpZ2h0OiAnMTBweCcgfX0+KzwvYnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IER5bmFtaWNDaGFydDtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlUmVmIiwiZWNoYXJ0cyIsIkR5bmFtaWNDaGFydCIsImNhdGVnb3JpZXMiLCJub3ciLCJEYXRlIiwicmVzIiwibGVuIiwidW5zaGlmdCIsInRvTG9jYWxlVGltZVN0cmluZyIsInJlcGxhY2UiLCJjYXRlZ29yaWVzMiIsInB1c2giLCJ0ZW1wZXJhdHVyZURhdGEiLCJzZXRUZW1wZXJhdHVyZURhdGEiLCJ1dGlsaXphdGlvbkRhdGEiLCJzZXRVdGlsaXphdGlvbkRhdGEiLCJpc1Zpc2libGUiLCJzZXRJc1Zpc2libGUiLCJpc01pbmltaXplZCIsInNldElzTWluaW1pemVkIiwiY2hhcnRSZWYiLCJteUNoYXJ0IiwidG9nZ2xlVmlzaWJpbGl0eSIsInRvZ2dsZU1pbmltaXplIiwiY3VycmVudCIsImluaXQiLCJvcHRpb24iLCJ0aXRsZSIsInRleHQiLCJ0b29sdGlwIiwidHJpZ2dlciIsImF4aXNQb2ludGVyIiwidHlwZSIsImxhYmVsIiwiYmFja2dyb3VuZENvbG9yIiwibGVnZW5kIiwidG9vbGJveCIsInNob3ciLCJmZWF0dXJlIiwiZGF0YVZpZXciLCJyZWFkT25seSIsInJlc3RvcmUiLCJzYXZlQXNJbWFnZSIsImRhdGFab29tIiwic3RhcnQiLCJlbmQiLCJ4QXhpcyIsImJvdW5kYXJ5R2FwIiwiZGF0YSIsInlBeGlzIiwic2NhbGUiLCJuYW1lIiwibWF4IiwibWluIiwic2VyaWVzIiwic2V0T3B0aW9uIiwiZmV0Y2hHUFVTdGF0c0RhdGEiLCJyZXNwb25zZSIsImZldGNoIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsInRlbXBlcmF0dXJlIiwidXRpbGl6YXRpb24iLCJwcmV2IiwibmV3RGF0YSIsInNsaWNlIiwiaW50ZXJ2YWxJZCIsInNldEludGVydmFsIiwiY2xlYXJJbnRlcnZhbCIsImRpc3Bvc2UiLCJkaXYiLCJzdHlsZSIsInBvc2l0aW9uIiwiYm90dG9tIiwicmlnaHQiLCJ3aWR0aCIsImhlaWdodCIsImJvcmRlciIsImJveFNoYWRvdyIsImJvcmRlclJhZGl1cyIsInpJbmRleCIsInBhZGRpbmciLCJkaXNwbGF5IiwianVzdGlmeUNvbnRlbnQiLCJidXR0b24iLCJvbkNsaWNrIiwibWFyZ2luUmlnaHQiLCJmb250U2l6ZSIsImN1cnNvciIsInRyYW5zaXRpb24iLCJvbk1vdXNlRW50ZXIiLCJlIiwidGFyZ2V0Iiwib25Nb3VzZUxlYXZlIiwiY29sb3IiLCJyZWYiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/DynamicChart.jsx\n"));

/***/ })

});